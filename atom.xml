<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wjt&#39;s Blog</title>
  
  <subtitle>一个菜鸟的blog</subtitle>
  <link href="https://my.wjtblog.online/atom.xml" rel="self"/>
  
  <link href="https://my.wjtblog.online/"/>
  <updated>2022-09-09T03:42:01.749Z</updated>
  <id>https://my.wjtblog.online/</id>
  
  <author>
    <name>wjt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>啊帐的画廊</title>
    <link href="https://my.wjtblog.online/undefined/3be073bc.html"/>
    <id>https://my.wjtblog.online/undefined/3be073bc.html</id>
    <published>2022-09-09T03:42:01.000Z</published>
    <updated>2022-09-09T03:42:01.749Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220909 114150 啊帐的画廊/0.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/1.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/2.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/3.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/4.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/5.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/6.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/7.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/8.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/9.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/10.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/11.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/12.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/13.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/14.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/15.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/16.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/17.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/18.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/19.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/20.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/21.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/22.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/23.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/24.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/25.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/26.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/27.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/28.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/29.jpg" alt=""><br><img src="/img/20220909 114150 啊帐的画廊/30.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">祝大伙中秋节快乐呀</summary>
    
    
    
    <category term="插画" scheme="https://my.wjtblog.online/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="插画" scheme="https://my.wjtblog.online/tags/%E6%8F%92%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>ai画作 Mews.</title>
    <link href="https://my.wjtblog.online/undefined/4ad61758.html"/>
    <id>https://my.wjtblog.online/undefined/4ad61758.html</id>
    <published>2022-09-08T11:39:08.000Z</published>
    <updated>2022-09-08T11:44:30.449Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220908 193857 ai画作 Mews/0.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/1.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/2.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/3.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/4.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/5.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/6.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/7.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/8.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/9.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/10.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/11.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/12.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/13.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/14.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/15.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/16.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/17.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/18.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/19.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/20.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/21.jpg" alt=""><br><img src="/img/20220908 193857 ai画作 Mews/22.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">今天是治愈系ai画作哦~</summary>
    
    
    
    <category term="插画" scheme="https://my.wjtblog.online/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="插画" scheme="https://my.wjtblog.online/tags/%E6%8F%92%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>画师 DeadPrince</title>
    <link href="https://my.wjtblog.online/undefined/9e8f19f9.html"/>
    <id>https://my.wjtblog.online/undefined/9e8f19f9.html</id>
    <published>2022-09-07T06:25:21.000Z</published>
    <updated>2022-09-07T13:37:24.022Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220907 142521 画师 DeadPrince/0.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/1.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/2.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/3.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/4.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/5.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/6.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">爆裂双重美感 甜酷辣妹的二次元</summary>
    
    
    
    <category term="插画" scheme="https://my.wjtblog.online/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="二次元" scheme="https://my.wjtblog.online/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>原神 torino</title>
    <link href="https://my.wjtblog.online/undefined/daf3f053.html"/>
    <id>https://my.wjtblog.online/undefined/daf3f053.html</id>
    <published>2022-09-06T03:05:04.000Z</published>
    <updated>2022-09-07T13:51:01.689Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220906 110503 原神 torino/0.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/1.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/2.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/3.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/4.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/5.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/6.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/7.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/8.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/9.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/10.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/11.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/12.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/13.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/14.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/15.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/16.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/17.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/18.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/19.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/20.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/21.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/22.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/23.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/24.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">原来你也玩原神</summary>
    
    
    
    <category term="插画" scheme="https://my.wjtblog.online/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="二次元" scheme="https://my.wjtblog.online/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/"/>
    
    <category term="原神" scheme="https://my.wjtblog.online/tags/%E5%8E%9F%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>biya~</title>
    <link href="https://my.wjtblog.online/undefined/d87f7e0c.html"/>
    <id>https://my.wjtblog.online/undefined/d87f7e0c.html</id>
    <published>2022-09-05T13:41:00.000Z</published>
    <updated>2022-09-07T13:53:25.140Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/biya/0.jpg" alt="">s<br><img src="/img/biya/1.jpg" alt=""><br><img src="/img/biya/2.jpg" alt=""><br><img src="/img/biya/3.jpg" alt=""><br><img src="/img/biya/4.jpg" alt=""><br><img src="/img/biya/5.jpg" alt=""><br><img src="/img/biya/6.jpg" alt=""><br><img src="/img/biya/7.jpg" alt=""><br><img src="/img/biya/8.jpg" alt=""><br><img src="/img/biya/9.jpg" alt=""><br><img src="/img/biya/10.jpg" alt=""><br><img src="/img/biya/11.jpg" alt=""><br><img src="/img/biya/12.jpg" alt=""><br><img src="/img/biya/13.jpg" alt=""><br><img src="/img/biya/14.jpg" alt=""><br><img src="/img/biya/15.jpg" alt=""><br><img src="/img/biya/16.jpg" alt=""><br><img src="/img/biya/17.jpg" alt=""><br><img src="/img/biya/18.jpg" alt=""><br><img src="/img/biya/19.jpg" alt=""><br><img src="/img/biya/20.jpg" alt=""><br><img src="/img/biya/21.jpg" alt=""><br><img src="/img/biya/22.jpg" alt=""><br><img src="/img/biya/23.jpg" alt=""><br><img src="/img/biya/24.jpg" alt=""><br><img src="/img/biya/25.jpg" alt=""><br><img src="/img/biya/26.jpg" alt=""><br><img src="/img/biya/27.jpg" alt=""><br><img src="/img/biya/28.jpg" alt=""><br><img src="/img/biya/29.jpg" alt=""><br><img src="/img/biya/30.jpg" alt=""><br><img src="/img/biya/31.jpg" alt=""><br><img src="/img/biya/32.jpg" alt=""><br><img src="/img/biya/33.jpg" alt=""><br><img src="/img/biya/34.jpg" alt=""><br><img src="/img/biya/35.jpg" alt=""><br><img src="/img/biya/36.jpg" alt=""><br><img src="/img/biya/37.jpg" alt=""><br><img src="/img/biya/38.jpg" alt=""><br><img src="/img/biya/39.jpg" alt=""><br><img src="/img/biya/40.jpg" alt=""><br><img src="/img/biya/41.jpg" alt=""><br><img src="/img/biya/42.jpg" alt=""><br><img src="/img/biya/43.jpg" alt=""><br><img src="/img/biya/44.jpg" alt=""><br><img src="/img/biya/45.jpg" alt=""><br><img src="/img/biya/46.jpg" alt=""><br><img src="/img/biya/47.jpg" alt=""><br><img src="/img/biya/48.jpg" alt=""><br><img src="/img/biya/49.jpg" alt=""><br><img src="/img/biya/50.jpg" alt=""><br><img src="/img/biya/51.jpg" alt=""><br><img src="/img/biya/52.jpg" alt=""><br><img src="/img/biya/53.jpg" alt=""><br><img src="/img/biya/54.jpg" alt=""><br><img src="/img/biya/55.jpg" alt=""><br><img src="/img/biya/56.jpg" alt=""><br><img src="/img/biya/57.jpg" alt=""></p>          </div>]]></content>
    
    
    <summary type="html">biya小姐姐看了都说好</summary>
    
    
    
    <category term="插画" scheme="https://my.wjtblog.online/categories/%E6%8F%92%E7%94%BB/"/>
    
    
    <category term="biya" scheme="https://my.wjtblog.online/tags/biya/"/>
    
    <category term="二次元" scheme="https://my.wjtblog.online/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/"/>
    
    <category term="美女" scheme="https://my.wjtblog.online/tags/%E7%BE%8E%E5%A5%B3/"/>
    
  </entry>
  
  <entry>
    <title>web抖音参数</title>
    <link href="https://my.wjtblog.online/undefined/fbf31d6e.html"/>
    <id>https://my.wjtblog.online/undefined/fbf31d6e.html</id>
    <published>2022-09-05T05:32:00.000Z</published>
    <updated>2022-09-06T05:12:16.431Z</updated>
    
    <content type="html"><![CDATA[<span class='p center logo large'>某短视频web端 X-Bogus及_signature参数</span><h2 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h2><span class='p left h4'>在文章开始前，先跟大伙介绍一下自己。本菜鸡今年刚毕业，现在在某厂做爬虫\逆向工程师，这个项目也是第一个接手的项目，前前后后看了一个多星期吧，把一些心得稍微记录一下，欢迎各位大佬指正嗷</span><h2 id="确定目标参数"><a href="#确定目标参数" class="headerlink" title="确定目标参数"></a>确定目标参数</h2><p>我们以搜索接口作为例子举例<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/sousuojiekou.jpg"/></div></div><br>先搜索一下他数据在哪里<br>开发者工具 -&gt; network -&gt; 刷新 -&gt; Ctrl+f -&gt;搜索数据<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/sousuoshuju.jpg"/></div></div><br>可以看到我们的（甜妹数据） 咳咳 搜索数据已经能找得到了那我们就去看看这个url长啥样<br>拉到postman上看一眼<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/postman.jpg"/></div></div><br>被block了很正常，已经还有啥环境要补，我们先看参数<br>keyword : 关键字<br>msToken : 这个还不知道应该是生成的啥token<br>X-Bogus : 这个生成的字符串很可疑应该是加密的<br>我们把postman的环境参数补齐试试看能不能返回数据<br>PS. 有个小技巧postman有个Bulk Edit的按钮能直接帮我们格式化数据，我们复制粘贴即可，最后再点一下Key-Value Edit调整一下。<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/postmanGet.jpg"/></div></div><br>可以看到咱们的数据已经出来了,之后把X-Bogus参数去掉试试<br>果然是没有掉了，那基本可以肯定这个是作为加密的一部分了<br>老样子去谷歌调试看看</p><h2 id="确定生成入口"><a href="#确定生成入口" class="headerlink" title="确定生成入口"></a>确定生成入口</h2><p>像类似于这种Get方法，加密参数在url里的我们可以直接使用谷歌浏览器的控制台之中的xhr提取断点<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/xhr.jpg"/></div></div><br>我们先刷新网站,可以看到右侧作用域中的arguments已经有X-bougs参数了，然后就是看堆栈了<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/webmssdk.jpg"/></div></div><br>可以看到这个应该是从webmssdk.js出来的，在开始和结束之前看看，会发现开始的时候还没有，结束了生成了，那这个js文件就是加密的入口<br><div class="tip key"><p>小知识补充</p></div><br>有些时候我们用xhr调试断点的时候会发现，如果项目结构太过复杂，在xhr断点生成时，我们仍然需要审阅很多代码，就不是很方便，有两种办法<br>注入hook 和 内存漫游<br>今天先介绍第一个</p><h3 id="注入hook"><a href="#注入hook" class="headerlink" title="注入hook"></a>注入hook</h3><p>话不多说先上代码<br><figure class="highlight js"><figcaption><span>first test</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码作者：掘金tager</span></span><br><span class="line"><span class="comment">// xhr中的方法拦截，eg: open、send etc.</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookFunction</span>(<span class="params">funcName, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="comment">// 将open参数存入xhr, 在其它事件回调中可以获取到。</span></span><br><span class="line">    <span class="keyword">if</span> (funcName === <span class="string">&#x27;open&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">xhr</span>.<span class="property">open_args</span> = args</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (config[funcName]) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>, <span class="string">&#x27;this&#x27;</span>)</span><br><span class="line">      <span class="comment">// 配置的函数执行结果返回为true时终止调用</span></span><br><span class="line">      <span class="keyword">var</span> result = config[funcName].<span class="title function_">call</span>(<span class="variable language_">this</span>, args, <span class="variable language_">this</span>.<span class="property">xhr</span>)</span><br><span class="line">      <span class="keyword">if</span> (result) <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">xhr</span>[funcName].<span class="title function_">apply</span>(<span class="variable language_">this</span>.<span class="property">xhr</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// xhr中的属性和事件的拦截</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getterFactory</span>(<span class="params">attr, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="variable language_">this</span>.<span class="title function_">hasOwnProperty</span>(attr + <span class="string">&quot;_&quot;</span>) ? <span class="variable language_">this</span>[attr + <span class="string">&quot;_&quot;</span>] : <span class="variable language_">this</span>.<span class="property">xhr</span>[attr];</span><br><span class="line">    <span class="keyword">var</span> getterHook = (config[attr] || &#123;&#125;)[<span class="string">&quot;getter&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> getterHook &amp;&amp; <span class="title function_">getterHook</span>(value, <span class="variable language_">this</span>) || value</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在赋值时触发该工厂函数（如onload等事件）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setterFactory</span>(<span class="params">attr, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="variable language_">this</span>.<span class="property">xhr</span>;</span><br><span class="line">    <span class="keyword">var</span> hook = config[attr]; <span class="comment">// 方法或对象</span></span><br><span class="line">    <span class="variable language_">this</span>[attr + <span class="string">&quot;_&quot;</span>] = value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^on/</span>.<span class="title function_">test</span>(attr)) &#123;</span><br><span class="line">      <span class="comment">// note：间接的在真实的xhr上给事件绑定函数</span></span><br><span class="line">      xhr[attr] = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="comment">// e = configEvent(e, _this)</span></span><br><span class="line">        <span class="keyword">var</span> result = hook &amp;&amp; config[attr].<span class="title function_">call</span>(_this, xhr, e)</span><br><span class="line">        result || value.<span class="title function_">call</span>(_this, e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> attrSetterHook = (hook || &#123;&#125;)[<span class="string">&quot;setter&quot;</span>]</span><br><span class="line">      value = attrSetterHook &amp;&amp; <span class="title function_">attrSetterHook</span>(value, _this) || value</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 并非xhr的所有属性都是可写的</span></span><br><span class="line">        xhr[attr] = value;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;xhr的&#x27;</span> + attr + <span class="string">&#x27;属性不可写&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 核心拦截的handler</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">xhrHook</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="comment">// 存储真实的xhr构造器, 在取消hook时，可恢复</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">realXhr</span> = <span class="variable language_">window</span>.<span class="property">realXhr</span> || <span class="title class_">XMLHttpRequest</span></span><br><span class="line">  <span class="comment">// 重写XMLHttpRequest构造函数</span></span><br><span class="line">  <span class="title class_">XMLHttpRequest</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="variable language_">window</span>.<span class="title function_">realXhr</span>()</span><br><span class="line">    <span class="comment">// 真实的xhr实例存储到自定义的xhr属性中</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">xhr</span> = xhr</span><br><span class="line">    <span class="comment">// note: 遍历实例及其原型上的属性（实例和原型链上有相同属性时，取实例属性）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> xhr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(xhr[attr]) === <span class="string">&#x27;[object Function]&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>[attr] = <span class="title function_">hookFunction</span>(attr, config); <span class="comment">// 接管xhr function</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// attention: 如果重写XMLHttpRequest，必须要全部重写，否则在ajax中不会触发success、error（原因是3.x版本是在load事件中执行success）</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>, attr, &#123; <span class="comment">// 接管xhr attr、event</span></span><br><span class="line">          <span class="attr">get</span>: <span class="title function_">getterFactory</span>(attr, config),</span><br><span class="line">          <span class="attr">set</span>: <span class="title function_">setterFactory</span>(attr, config),</span><br><span class="line">          <span class="attr">enumerable</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">realXhr</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解除xhr拦截，归还xhr管理权</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unXhrHook</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>[realXhr]) <span class="title class_">XMLHttpRequest</span> = <span class="variable language_">window</span>[realXhr];</span><br><span class="line">  <span class="variable language_">window</span>[realXhr] = <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行部分</span></span><br><span class="line"><span class="title function_">xhrHook</span>(&#123;</span><br><span class="line">  <span class="attr">open</span>: <span class="keyword">function</span> (<span class="params">args, xhr</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;open called!&quot;</span>, args, xhr)</span><br><span class="line">     <span class="comment">// return true // 返回true将终止请求，这个就是常规拦截的精髓了</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">setRequestHeader</span>: <span class="keyword">function</span> (<span class="params">args, xhr</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setRequestHeader called!&quot;</span>, args, xhr)</span><br><span class="line">         &#125;,</span><br><span class="line">  <span class="attr">onload</span>: <span class="keyword">function</span> (<span class="params">xhr</span>) &#123;</span><br><span class="line">    <span class="comment">// 对响应结果做处理</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">responseText</span> += <span class="string">&#x27; tager&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>要理解这段代码需要一点js基础，对于初学者可以理解为当这个出现时就进行debugger操作,只是在操作的时候我们用另一个函数来监听参数的生成就可以了。<br>还有很多类似的hook，如Hook setInterval、Hook header、Hook Cookie Info等等<br>这边推荐去李玺老师的github上，有很多知识补充<br><div class="tag link"><a class="link-card" title="lx's github" href="https://github.com/lixi5338619"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">lx's github</p><p class="url">https://github.com/lixi5338619</p></div></a></div></p><h2 id="确定加密方式，以及生成位置"><a href="#确定加密方式，以及生成位置" class="headerlink" title="确定加密方式，以及生成位置"></a>确定加密方式，以及生成位置</h2><p>我们先roll一眼代码 _0xxxxx 果然是混淆了一下，不过这个问题不大，后面看看用反混淆工具也能还原出来<br>没有看到具体的调用函数，而且还有各种±*/&gt;&gt;,&gt;&gt;&gt;,&lt;&lt;,|,&amp;,^,%在一起运算符，这种事典型的jsvmp的特征<br>关于jsvmp可以看这篇文章<br><div class="tag link"><a class="link-card" title="jsvmp" href="http://www.xjishu.com/zhuanli/55/201810446970.html"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">jsvmp</p><p class="url">http://www.xjishu.com/zhuanli/55/201810446970.html</p></div></a></div><br>简单点来说就是jsvmp的函数都是匿名的，一般用call、apply的方法进行调用<br>那这个加密方式一般用打桩的方式进行log数据演示，这种方法可以看看十一姐的文章<br><div class="tag link"><a class="link-card" title="十一姐" href="https://blog.csdn.net/weixin_43411585/article/details/123672621"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">十一姐</p><p class="url">https://blog.csdn.net/weixin_43411585/article/details/123672621</p></div></a></div><br>我们的目标是啥！<br>以最简单的方式获取数据！<br>（真的不是作者懒）<br>直接就是源码+入口函数+补环境一套操作<br>我们直接在webmssdk.js的堆栈前我们直接打断点<br>然后f9 f9 f9 f9 f9 f9 f9 f9 f9单步调试（对调试感兴趣的话可以在之后的文章中单独说）<br>然后就可以看到一个XMLHttprequest.send方法<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/xmlsend.jpg"/></div></div><br>控制台log一下<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/msTokenbefore.jpg"/></div></div><br>send方法后<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/XBafter.jpg"/></div></div><br>那中间的参数就是在send方法中生成的了，之后的任务就是找到函数然后将参数和环境补齐即可<br>因为众所周知的原因不能说太多，不过到了这步之后耐心点也能出的来<br>X-Bogus及_signature都在这之中生成的</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>补完环境后我们打包一下生成函数做成接口让python调用<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/getXB.jpg"/></div></div><br>postman验证<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/result.jpg"/></div></div><br>ok 已经解出来了<br>然后去尽情欣赏小姐姐的作品去吧<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/2.jpg"/></div></div></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><span class='p left h4'>第一次写文章，写得不好大家轻点喷。做逆向要耐心也看运气，所以暂时做不出来也不要着急，其实在逆向这个方向上最好还是别像我一样偷懒，切实逆向解出来才是真实的，对自己提升也大。利用打桩的方法我也弄了一些，后续有感兴趣的话可以再出一期。另外各位大佬有什么好的想法都可以跟我说，很欢迎大家一起讨论</span>]]></content>
    
    
    <summary type="html">外边小姐姐好看，里边更好看</summary>
    
    
    
    <category term="逆向" scheme="https://my.wjtblog.online/categories/%E9%80%86%E5%90%91/"/>
    
    
    <category term="技术" scheme="https://my.wjtblog.online/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
