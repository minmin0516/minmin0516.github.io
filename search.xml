<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>画师 DeadPrince</title>
      <link href="/undefined/9e8f19f9.html"/>
      <url>/undefined/9e8f19f9.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220907 142521 画师 DeadPrince/0.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/1.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/2.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/3.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/4.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/5.jpg" alt=""><br><img src="/img/20220907 142521 画师 DeadPrince/6.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 插画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原神 torino</title>
      <link href="/undefined/daf3f053.html"/>
      <url>/undefined/daf3f053.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/20220906 110503 原神 torino/0.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/1.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/2.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/3.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/4.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/5.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/6.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/7.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/8.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/9.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/10.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/11.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/12.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/13.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/14.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/15.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/16.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/17.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/18.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/19.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/20.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/21.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/22.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/23.jpg" alt=""><br><img src="/img/20220906 110503 原神 torino/24.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 插画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
            <tag> 原神 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>biya~</title>
      <link href="/undefined/d87f7e0c.html"/>
      <url>/undefined/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/img/biya/0.jpg" alt="">s<br><img src="/img/biya/1.jpg" alt=""><br><img src="/img/biya/2.jpg" alt=""><br><img src="/img/biya/3.jpg" alt=""><br><img src="/img/biya/4.jpg" alt=""><br><img src="/img/biya/5.jpg" alt=""><br><img src="/img/biya/6.jpg" alt=""><br><img src="/img/biya/7.jpg" alt=""><br><img src="/img/biya/8.jpg" alt=""><br><img src="/img/biya/9.jpg" alt=""><br><img src="/img/biya/10.jpg" alt=""><br><img src="/img/biya/11.jpg" alt=""><br><img src="/img/biya/12.jpg" alt=""><br><img src="/img/biya/13.jpg" alt=""><br><img src="/img/biya/14.jpg" alt=""><br><img src="/img/biya/15.jpg" alt=""><br><img src="/img/biya/16.jpg" alt=""><br><img src="/img/biya/17.jpg" alt=""><br><img src="/img/biya/18.jpg" alt=""><br><img src="/img/biya/19.jpg" alt=""><br><img src="/img/biya/20.jpg" alt=""><br><img src="/img/biya/21.jpg" alt=""><br><img src="/img/biya/22.jpg" alt=""><br><img src="/img/biya/23.jpg" alt=""><br><img src="/img/biya/24.jpg" alt=""><br><img src="/img/biya/25.jpg" alt=""><br><img src="/img/biya/26.jpg" alt=""><br><img src="/img/biya/27.jpg" alt=""><br><img src="/img/biya/28.jpg" alt=""><br><img src="/img/biya/29.jpg" alt=""><br><img src="/img/biya/30.jpg" alt=""><br><img src="/img/biya/31.jpg" alt=""><br><img src="/img/biya/32.jpg" alt=""><br><img src="/img/biya/33.jpg" alt=""><br><img src="/img/biya/34.jpg" alt=""><br><img src="/img/biya/35.jpg" alt=""><br><img src="/img/biya/36.jpg" alt=""><br><img src="/img/biya/37.jpg" alt=""><br><img src="/img/biya/38.jpg" alt=""><br><img src="/img/biya/39.jpg" alt=""><br><img src="/img/biya/40.jpg" alt=""><br><img src="/img/biya/41.jpg" alt=""><br><img src="/img/biya/42.jpg" alt=""><br><img src="/img/biya/43.jpg" alt=""><br><img src="/img/biya/44.jpg" alt=""><br><img src="/img/biya/45.jpg" alt=""><br><img src="/img/biya/46.jpg" alt=""><br><img src="/img/biya/47.jpg" alt=""><br><img src="/img/biya/48.jpg" alt=""><br><img src="/img/biya/49.jpg" alt=""><br><img src="/img/biya/50.jpg" alt=""><br><img src="/img/biya/51.jpg" alt=""><br><img src="/img/biya/52.jpg" alt=""><br><img src="/img/biya/53.jpg" alt=""><br><img src="/img/biya/54.jpg" alt=""><br><img src="/img/biya/55.jpg" alt=""><br><img src="/img/biya/56.jpg" alt=""><br><img src="/img/biya/57.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 插画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> biya </tag>
            
            <tag> 二次元 </tag>
            
            <tag> 美女 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web抖音参数</title>
      <link href="/undefined/fbf31d6e.html"/>
      <url>/undefined/fbf31d6e.html</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>某短视频web端 X-Bogus及_signature参数</span><h2 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h2><span class='p left h4'>在文章开始前，先跟大伙介绍一下自己。本菜鸡今年刚毕业，现在在某厂做爬虫\逆向工程师，这个项目也是第一个接手的项目，前前后后看了一个多星期吧，把一些心得稍微记录一下，欢迎各位大佬指正嗷</span><h2 id="确定目标参数"><a href="#确定目标参数" class="headerlink" title="确定目标参数"></a>确定目标参数</h2><p>我们以搜索接口作为例子举例<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/sousuojiekou.jpg"/></div></div><br>先搜索一下他数据在哪里<br>开发者工具 -&gt; network -&gt; 刷新 -&gt; Ctrl+f -&gt;搜索数据<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/sousuoshuju.jpg"/></div></div><br>可以看到我们的（甜妹数据） 咳咳 搜索数据已经能找得到了那我们就去看看这个url长啥样<br>拉到postman上看一眼<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/postman.jpg"/></div></div><br>被block了很正常，已经还有啥环境要补，我们先看参数<br>keyword : 关键字<br>msToken : 这个还不知道应该是生成的啥token<br>X-Bogus : 这个生成的字符串很可疑应该是加密的<br>我们把postman的环境参数补齐试试看能不能返回数据<br>PS. 有个小技巧postman有个Bulk Edit的按钮能直接帮我们格式化数据，我们复制粘贴即可，最后再点一下Key-Value Edit调整一下。<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/postmanGet.jpg"/></div></div><br>可以看到咱们的数据已经出来了,之后把X-Bogus参数去掉试试<br>果然是没有掉了，那基本可以肯定这个是作为加密的一部分了<br>老样子去谷歌调试看看</p><h2 id="确定生成入口"><a href="#确定生成入口" class="headerlink" title="确定生成入口"></a>确定生成入口</h2><p>像类似于这种Get方法，加密参数在url里的我们可以直接使用谷歌浏览器的控制台之中的xhr提取断点<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/xhr.jpg"/></div></div><br>我们先刷新网站,可以看到右侧作用域中的arguments已经有X-bougs参数了，然后就是看堆栈了<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/webmssdk.jpg"/></div></div><br>可以看到这个应该是从webmssdk.js出来的，在开始和结束之前看看，会发现开始的时候还没有，结束了生成了，那这个js文件就是加密的入口<br><div class="tip key"><p>小知识补充</p></div><br>有些时候我们用xhr调试断点的时候会发现，如果项目结构太过复杂，在xhr断点生成时，我们仍然需要审阅很多代码，就不是很方便，有两种办法<br>注入hook 和 内存漫游<br>今天先介绍第一个</p><h3 id="注入hook"><a href="#注入hook" class="headerlink" title="注入hook"></a>注入hook</h3><p>话不多说先上代码<br><figure class="highlight js"><figcaption><span>first test</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码作者：掘金tager</span></span><br><span class="line"><span class="comment">// xhr中的方法拦截，eg: open、send etc.</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookFunction</span>(<span class="params">funcName, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="comment">// 将open参数存入xhr, 在其它事件回调中可以获取到。</span></span><br><span class="line">    <span class="keyword">if</span> (funcName === <span class="string">&#x27;open&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">xhr</span>.<span class="property">open_args</span> = args</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (config[funcName]) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>, <span class="string">&#x27;this&#x27;</span>)</span><br><span class="line">      <span class="comment">// 配置的函数执行结果返回为true时终止调用</span></span><br><span class="line">      <span class="keyword">var</span> result = config[funcName].<span class="title function_">call</span>(<span class="variable language_">this</span>, args, <span class="variable language_">this</span>.<span class="property">xhr</span>)</span><br><span class="line">      <span class="keyword">if</span> (result) <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">xhr</span>[funcName].<span class="title function_">apply</span>(<span class="variable language_">this</span>.<span class="property">xhr</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// xhr中的属性和事件的拦截</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getterFactory</span>(<span class="params">attr, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="variable language_">this</span>.<span class="title function_">hasOwnProperty</span>(attr + <span class="string">&quot;_&quot;</span>) ? <span class="variable language_">this</span>[attr + <span class="string">&quot;_&quot;</span>] : <span class="variable language_">this</span>.<span class="property">xhr</span>[attr];</span><br><span class="line">    <span class="keyword">var</span> getterHook = (config[attr] || &#123;&#125;)[<span class="string">&quot;getter&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> getterHook &amp;&amp; <span class="title function_">getterHook</span>(value, <span class="variable language_">this</span>) || value</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在赋值时触发该工厂函数（如onload等事件）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setterFactory</span>(<span class="params">attr, config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="variable language_">this</span>.<span class="property">xhr</span>;</span><br><span class="line">    <span class="keyword">var</span> hook = config[attr]; <span class="comment">// 方法或对象</span></span><br><span class="line">    <span class="variable language_">this</span>[attr + <span class="string">&quot;_&quot;</span>] = value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^on/</span>.<span class="title function_">test</span>(attr)) &#123;</span><br><span class="line">      <span class="comment">// note：间接的在真实的xhr上给事件绑定函数</span></span><br><span class="line">      xhr[attr] = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="comment">// e = configEvent(e, _this)</span></span><br><span class="line">        <span class="keyword">var</span> result = hook &amp;&amp; config[attr].<span class="title function_">call</span>(_this, xhr, e)</span><br><span class="line">        result || value.<span class="title function_">call</span>(_this, e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> attrSetterHook = (hook || &#123;&#125;)[<span class="string">&quot;setter&quot;</span>]</span><br><span class="line">      value = attrSetterHook &amp;&amp; <span class="title function_">attrSetterHook</span>(value, _this) || value</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 并非xhr的所有属性都是可写的</span></span><br><span class="line">        xhr[attr] = value;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;xhr的&#x27;</span> + attr + <span class="string">&#x27;属性不可写&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 核心拦截的handler</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">xhrHook</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="comment">// 存储真实的xhr构造器, 在取消hook时，可恢复</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">realXhr</span> = <span class="variable language_">window</span>.<span class="property">realXhr</span> || <span class="title class_">XMLHttpRequest</span></span><br><span class="line">  <span class="comment">// 重写XMLHttpRequest构造函数</span></span><br><span class="line">  <span class="title class_">XMLHttpRequest</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="variable language_">window</span>.<span class="title function_">realXhr</span>()</span><br><span class="line">    <span class="comment">// 真实的xhr实例存储到自定义的xhr属性中</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">xhr</span> = xhr</span><br><span class="line">    <span class="comment">// note: 遍历实例及其原型上的属性（实例和原型链上有相同属性时，取实例属性）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> xhr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(xhr[attr]) === <span class="string">&#x27;[object Function]&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>[attr] = <span class="title function_">hookFunction</span>(attr, config); <span class="comment">// 接管xhr function</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// attention: 如果重写XMLHttpRequest，必须要全部重写，否则在ajax中不会触发success、error（原因是3.x版本是在load事件中执行success）</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>, attr, &#123; <span class="comment">// 接管xhr attr、event</span></span><br><span class="line">          <span class="attr">get</span>: <span class="title function_">getterFactory</span>(attr, config),</span><br><span class="line">          <span class="attr">set</span>: <span class="title function_">setterFactory</span>(attr, config),</span><br><span class="line">          <span class="attr">enumerable</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">realXhr</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解除xhr拦截，归还xhr管理权</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unXhrHook</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>[realXhr]) <span class="title class_">XMLHttpRequest</span> = <span class="variable language_">window</span>[realXhr];</span><br><span class="line">  <span class="variable language_">window</span>[realXhr] = <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行部分</span></span><br><span class="line"><span class="title function_">xhrHook</span>(&#123;</span><br><span class="line">  <span class="attr">open</span>: <span class="keyword">function</span> (<span class="params">args, xhr</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;open called!&quot;</span>, args, xhr)</span><br><span class="line">     <span class="comment">// return true // 返回true将终止请求，这个就是常规拦截的精髓了</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">setRequestHeader</span>: <span class="keyword">function</span> (<span class="params">args, xhr</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setRequestHeader called!&quot;</span>, args, xhr)</span><br><span class="line">         &#125;,</span><br><span class="line">  <span class="attr">onload</span>: <span class="keyword">function</span> (<span class="params">xhr</span>) &#123;</span><br><span class="line">    <span class="comment">// 对响应结果做处理</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">responseText</span> += <span class="string">&#x27; tager&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>要理解这段代码需要一点js基础，对于初学者可以理解为当这个出现时就进行debugger操作,只是在操作的时候我们用另一个函数来监听参数的生成就可以了。<br>还有很多类似的hook，如Hook setInterval、Hook header、Hook Cookie Info等等<br>这边推荐去李玺老师的github上，有很多知识补充<br><div class="tag link"><a class="link-card" title="lx's github" href="https://github.com/lixi5338619"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">lx's github</p><p class="url">https://github.com/lixi5338619</p></div></a></div></p><h2 id="确定加密方式，以及生成位置"><a href="#确定加密方式，以及生成位置" class="headerlink" title="确定加密方式，以及生成位置"></a>确定加密方式，以及生成位置</h2><p>我们先roll一眼代码 _0xxxxx 果然是混淆了一下，不过这个问题不大，后面看看用反混淆工具也能还原出来<br>没有看到具体的调用函数，而且还有各种±*/&gt;&gt;,&gt;&gt;&gt;,&lt;&lt;,|,&amp;,^,%在一起运算符，这种事典型的jsvmp的特征<br>关于jsvmp可以看这篇文章<br><div class="tag link"><a class="link-card" title="jsvmp" href="http://www.xjishu.com/zhuanli/55/201810446970.html"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">jsvmp</p><p class="url">http://www.xjishu.com/zhuanli/55/201810446970.html</p></div></a></div><br>简单点来说就是jsvmp的函数都是匿名的，一般用call、apply的方法进行调用<br>那这个加密方式一般用打桩的方式进行log数据演示，这种方法可以看看十一姐的文章<br><div class="tag link"><a class="link-card" title="十一姐" href="https://blog.csdn.net/weixin_43411585/article/details/123672621"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">十一姐</p><p class="url">https://blog.csdn.net/weixin_43411585/article/details/123672621</p></div></a></div><br>我们的目标是啥！<br>以最简单的方式获取数据！<br>（真的不是作者懒）<br>直接就是源码+入口函数+补环境一套操作<br>我们直接在webmssdk.js的堆栈前我们直接打断点<br>然后f9 f9 f9 f9 f9 f9 f9 f9 f9单步调试（对调试感兴趣的话可以在之后的文章中单独说）<br>然后就可以看到一个XMLHttprequest.send方法<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/xmlsend.jpg"/></div></div><br>控制台log一下<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/msTokenbefore.jpg"/></div></div><br>send方法后<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/XBafter.jpg"/></div></div><br>那中间的参数就是在send方法中生成的了，之后的任务就是找到函数然后将参数和环境补齐即可<br>因为众所周知的原因不能说太多，不过到了这步之后耐心点也能出的来<br>X-Bogus及_signature都在这之中生成的</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>补完环境后我们打包一下生成函数做成接口让python调用<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/getXB.jpg"/></div></div><br>postman验证<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/result.jpg"/></div></div><br>ok 已经解出来了<br>然后去尽情欣赏小姐姐的作品去吧<br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/douyin/2.jpg"/></div></div></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><span class='p left h4'>第一次写文章，写得不好大家轻点喷。做逆向要耐心也看运气，所以暂时做不出来也不要着急，其实在逆向这个方向上最好还是别像我一样偷懒，切实逆向解出来才是真实的，对自己提升也大。利用打桩的方法我也弄了一些，后续有感兴趣的话可以再出一期。另外各位大佬有什么好的想法都可以跟我说，很欢迎大家一起讨论</span>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"wjt`Blog","short_name":"wjt","theme_color":"#49b1f5","background_color":"#49b1f5","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/background.css"/>
      <url>/css/background.css</url>
      
        <content type="html"><![CDATA[#web_bg {    /* 背景图像的地址（url括号里）  */    background: url(https://public.ysjf.com/creator/U52bejYG.jpg);    /* 背景图像不重复 */    background-repeat: no-repeat;    /* 背景图像大小 */    background-size: cover;  }  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/133.css"/>
      <url>/css/133.css</url>
      
        <content type="html"><![CDATA[*{    margin: 0;    padding: 0;}body{    /* 100%窗口高度 */    height: 100vh;    /* 弹性布局 水平+垂直居中 */    display: flex;    justify-content: center;    align-items: center;    /* 径向渐变背景 */    background: radial-gradient(circle at top center,#718497,#29323c);}.container{    /* 弹性布局 默认水平排列 */    display: flex;    width: 90vw;    max-width: 900px;    height: 400px;    /* 溢出隐藏 */    overflow: hidden;}.item{    /* 相对定位 */    position: relative;    width: 60px;    margin: 10px;    cursor: pointer;    border-radius: 30px;    /* 保持原有尺寸比例，裁切长边 */    background-size: cover;    /* 定位背景图像为正中间 */    background-position: center;    /* 过渡效果：时长 贝塞尔曲线 */    transition: 0.5s cubic-bezier(0.05,0.61,0.41,0.95);    overflow: hidden;}.item .shadow{    position: absolute;    bottom: 0;    left: 0;    right: 0;    height: 100px;    transition: 0.5s cubic-bezier(0.05,0.61,0.41,0.95);}.item .content{    display: flex;    position: absolute;    left: 10px;    right: 0;    bottom: 10px;    height: 40px;    transition: 0.5s cubic-bezier(0.05,0.61,0.41,0.95);}.item .content .icon{    min-width: 40px;    width: 40px;    height: 40px;    border-radius: 50%;    background-color: #fff;    display: flex;    justify-content: center;    align-items: center;    font-size: 16px;}.item:nth-child(1) .fa{    color: #fc6e51;}.item:nth-child(2) .fa{    color: #ffce54;}.item:nth-child(3) .fa{    color: #2ecc71;}.item:nth-child(4) .fa{    color: #5d9cec;}.item:nth-child(5) .fa{    color: #ac92ec;}.item .content .text{    display: flex;    flex-direction: column;    justify-content: center;    margin-left: 10px;    color: #fff;    width: 100%;}.item .content .text div{    /* 超出显示省略号（需要设置width） */    width: calc(100% - 70px);    text-overflow: ellipsis;    overflow: hidden;    white-space: nowrap;    opacity: 0;    transition: opacity 0.5s ease-out;}.item .content .text .tit{    font-weight: bold;    font-size: 18px;}.item .content .text .sub{    /* 设置过渡效果延迟时间 */    transition-delay: 0.1s;}/* 选中态样式 */.item.active{    flex: 1;    margin: 0;    border-radius: 40px;}.item.active .shadow{    background: linear-gradient(to top,rgba(0,0,0,0.35) 65%,transparent);}.item.active .content{    bottom: 20px;    left: 20px;}.item.active .content .text div{    opacity: 1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: 'ZhuZiAYuanJWD';  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: 'iconfont' !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  .bangumi-active {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: #dbecfe !important;    border-radius: 10px !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    #history-baidu{    background: rgba(255, 255, 255, 0.9)  }  /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme='dark'] .card-widget {    background: #121212 !important;  }    [data-theme='dark'] div#post {    background: #121212 !important;  }    [data-theme='dark'] div#tag {    background: #121212 !important;  }    [data-theme='dark'] div#archive {    background: #121212 !important;  }    [data-theme='dark'] div#page {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #49b1f5;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #49b1f5;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* 鼠标图标 */  body {    cursor: url('/img/x1.cur'), auto;  }  a,  [type='button']:not(:disabled),  [type='reset']:not(:disabled),  [type='submit']:not(:disabled),  button:not(:disabled) {    cursor: url('/img/x2.cur'), auto !important;  }  /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #49b1f5;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }  /* tags样式 */#aside-content .card-tag-cloud a {  color: var(--anzhiyu-fontcolor)!important;  font-size: 1.05rem !important;  border-radius: 8px;  display: inline-block;  margin-right: 4px;}#aside-content .card-tag-cloud a:hover {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-white) !important;  box-shadow: var(--anzhiyu-shadow-theme);}@media screen and (min-width: 1300px) {  #aside-content .card-tag-cloud a:hover {    transform: scale(1.03);  }  #aside-content .card-tag-cloud a:active {    transform: scale(0.97);  }}#aside-content .card-tag-cloud a sup {  opacity: .4;  margin-left: 2px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/runtime/runtime.js"/>
      <url>/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date; function createtime() { var t = new Date("09/02/2022 00:00:00"); now.setTime(now.getTime() + 250); var e = (now - t) / 1e3 / 60 / 60 / 24, a = Math.floor(e), n = (now - t) / 1e3 / 60 / 60 - 24 * a, r = Math.floor(n); 1 == String(r).length && (r = "0" + r); var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r, i = Math.floor(s); 1 == String(i).length && (i = "0" + i); var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i, l = Math.round(o); 1 == String(l).length && (l = "0" + l); let g = ""; g = r < 18 && r >= 9 ? `<span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>` : `<span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g) } setInterval((() => { createtime() }), 250);]]></content>
      
    </entry>
    
    
  
</search>
